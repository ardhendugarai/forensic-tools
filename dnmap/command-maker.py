#!/usr/bin/python
from netaddr import IPNetwork
import random
import sys

if len(sys.argv) != 3:
    print("    Usage: %s [ip or ip range] [output file]" % sys.argv[0])
    sys.exit(0)

# list of ip addresses in given range
ip_list = list(IPNetwork(sys.argv[1]))

# top 100 nmap ports
top_100_ports = [7,9,13,21,22,23,25,26,37,53,79,80,81,88,106,110,111,113,119,135,139,143,144,179,199,389,427,443,444,445,465,513,514,515,543,544,548,554,587,631,646,873,990,993,995,1025,1026,1027,1028,1029,1110,1433,1720,1723,1755,1900,2000,2001,2049,2121,2717,3000,3128,3306,3389,3986,4899,5000,5009,5051,5060,5101,5190,5357,5432,5631,5666,5800,5900,6000,6001,6646,7070,8000,8008,8009,8080,8081,8443,8888,9100,9999,10000,32768,49152,49153,49154,49155,49156,49157]

# from: https://ip-ranges.amazonaws.com/ip-ranges.json
ip_ranges = ["23.20.0.0/14","46.51.128.0/18","46.51.192.0/20","46.51.216.0/21","46.51.224.0/19","46.137.0.0/17","46.137.128.0/18","46.137.192.0/19","46.137.224.0/19","50.16.0.0/15","50.18.0.0/16","50.19.0.0/16","50.112.0.0/16","52.0.0.0/15","52.2.0.0/15","52.4.0.0/14","52.8.0.0/16","52.9.0.0/16","52.10.0.0/15","52.12.0.0/15","52.15.0.0/16","52.16.0.0/15","52.18.0.0/15","52.20.0.0/14","52.24.0.0/14","52.28.0.0/16","52.29.0.0/16","52.30.0.0/15","52.32.0.0/14","52.36.0.0/14","52.40.0.0/14","52.44.0.0/15","52.48.0.0/14","52.52.0.0/15","52.54.0.0/15","52.57.0.0/16","52.58.0.0/15","52.62.0.0/15","52.64.0.0/17","52.64.128.0/17","52.65.0.0/16","52.66.0.0/16","52.67.0.0/16","52.68.0.0/15","52.70.0.0/15","52.72.0.0/15","52.74.0.0/16","52.76.0.0/17","52.76.128.0/17","52.77.0.0/16","52.78.0.0/16","52.79.0.0/16","52.80.0.0/16","52.86.0.0/15","52.88.0.0/15","52.90.0.0/15","52.95.240.0/24","52.95.241.0/24","52.95.242.0/24","52.95.243.0/24","52.95.244.0/24","52.95.245.0/24","52.95.246.0/24","52.95.247.0/24","52.95.248.0/24","52.95.249.0/24","52.95.251.0/24","52.95.252.0/24","52.95.255.0/28","52.95.255.16/28","52.95.255.32/28","52.95.255.48/28","52.95.255.64/28","52.95.255.80/28","52.95.255.96/28","52.95.255.112/28","52.95.255.128/28","52.95.255.144/28","52.192.0.0/15","52.196.0.0/14","52.200.0.0/13","52.208.0.0/13","52.220.0.0/15","52.222.0.0/17","54.64.0.0/15","54.66.0.0/16","54.67.0.0/16","54.68.0.0/14","54.72.0.0/15","54.74.0.0/15","54.76.0.0/15","54.78.0.0/16","54.79.0.0/16","54.80.0.0/13","54.88.0.0/14","54.92.0.0/17","54.92.128.0/17","54.93.0.0/16","54.94.0.0/16","54.95.0.0/16","54.144.0.0/14","54.148.0.0/15","54.150.0.0/16","54.151.0.0/17","54.151.128.0/17","54.152.0.0/16","54.153.0.0/17","54.153.128.0/17","54.154.0.0/16","54.155.0.0/16","54.156.0.0/14","54.160.0.0/13","54.168.0.0/16","54.169.0.0/16","54.170.0.0/15","54.172.0.0/15","54.174.0.0/15","54.176.0.0/15","54.178.0.0/16","54.179.0.0/16","54.183.0.0/16","54.184.0.0/13","54.193.0.0/16","54.194.0.0/15","54.196.0.0/15","54.198.0.0/16","54.199.0.0/16","54.200.0.0/15","54.202.0.0/15","54.204.0.0/15","54.206.0.0/16","54.207.0.0/16","54.208.0.0/15","54.210.0.0/15","54.212.0.0/15","54.214.0.0/16","54.215.0.0/16","54.216.0.0/15","54.218.0.0/16","54.219.0.0/16","54.220.0.0/16","54.221.0.0/16","54.222.128.0/17","54.223.0.0/16","54.224.0.0/15","54.226.0.0/15","54.228.0.0/16","54.229.0.0/16","54.232.0.0/16","54.233.0.0/18","54.233.64.0/18","54.233.128.0/17","54.234.0.0/15","54.236.0.0/15","54.238.0.0/16","54.241.0.0/16","54.242.0.0/15","54.244.0.0/16","54.245.0.0/16","54.246.0.0/16","54.247.0.0/16","54.248.0.0/15","54.250.0.0/16","54.251.0.0/16","54.252.0.0/16","54.253.0.0/16","54.254.0.0/16","54.255.0.0/16","67.202.0.0/18","72.44.32.0/19","75.101.128.0/17","79.125.0.0/17","96.127.0.0/17","103.4.8.0/21","107.20.0.0/14","122.248.192.0/18","174.129.0.0/16","175.41.128.0/18","175.41.192.0/18","176.32.64.0/19","176.34.0.0/19","176.34.32.0/19","176.34.64.0/18","176.34.128.0/17","177.71.128.0/17","184.72.0.0/18","184.72.64.0/18","184.72.128.0/17","184.73.0.0/16","184.169.128.0/17","185.48.120.0/22","204.236.128.0/18","204.236.192.0/18","216.182.224.0/20"]

commands = []

# create commands
# creates a 1:1 ratio between real and spoofed addresses
for ip in ip_list:
    for port in top_100_ports:
        rand = random.randint(0,len(ip_ranges)-1)
        subnet = IPNetwork(ip_ranges[rand])
        # following indexes are used to exclude network and bcast addresses of subnet
        rand = random.randint(1,subnet.size-2)
        decoy = str(subnet[rand])
        commands.append("nmap -p %s %s -D %s\n" % (port, ip, decoy))

# randomize command order
random.shuffle(commands)

# output to file
with open(sys.argv[2], "a") as target_file:
    for index in range(0,len(commands)):
        target_file.write(commands[index])

print("Added commands for %s addresses" % (len(ip_list)))
